import { useState } from "react";

function getSalaries(fundingPool: number): number {
  const interns = Math.floor(Math.max(fundingPool - 10000, 0) / 10000) + 1;
  const salaries = Math.round(Math.floor(fundingPool / interns));
  return salaries;
}

const Dice: React.FC = () => (
  <div className="bg-slate-800 p-5 rounded-full border-slate-300 border-2">
    <svg
      // height="511pt"
      viewBox="0 -9 511.999 511"
      // width="511pt"
      xmlns="http://www.w3.org/2000/svg"
      className="animate-[wiggle_1s_ease-in-out_infinite] w-16 h-16 fill-slate-200"
    >
      <path d="M281.082 62.14c-15.937-2.476-30.957 8.462-33.488 24.422-1.207 7.735.668 15.473 5.281 21.786 4.613 6.316 11.414 10.457 19.148 11.66 1.524.238 3.04.351 4.536.351 14.175 0 26.671-10.324 28.93-24.742 2.484-15.926-8.45-30.937-24.376-33.469-.011-.003-.02-.003-.031-.007zm4.668 30.395c-.79 5.059-5.57 8.528-10.648 7.735a9.246 9.246 0 0 1-6.094-3.707 9.222 9.222 0 0 1-1.68-6.895c.73-4.602 4.723-7.898 9.238-7.898.47 0 .946.035 1.426.109 5.067.812 8.547 5.594 7.758 10.656zM313.45 162.418c-1.227 7.71.632 15.437 5.234 21.766 4.617 6.343 11.421 10.5 19.168 11.71 1.52.239 3.027.356 4.523.352 14.156 0 26.672-10.316 28.965-24.742 1.207-7.73-.668-15.469-5.278-21.793-4.613-6.328-11.417-10.477-19.156-11.68h.004c-15.965-2.488-30.976 8.465-33.46 24.387zm36.472-.938a9.267 9.267 0 0 1 1.683 6.915c-.808 5.07-5.601 8.546-10.675 7.761a9.245 9.245 0 0 1-6.09-3.726 9.181 9.181 0 0 1-1.656-6.903c.718-4.586 4.691-7.87 9.203-7.87.476 0 .96.034 1.445.113a9.255 9.255 0 0 1 6.09 3.71zM382.59 268.117c4.613 6.324 11.418 10.477 19.152 11.68 1.528.242 3.059.36 4.578.36 6.153 0 12.13-1.938 17.2-5.634 6.332-4.613 10.48-11.41 11.687-19.14 1.207-7.723-.668-15.457-5.281-21.778-4.617-6.32-11.418-10.468-19.153-11.675-15.96-2.489-30.968 8.449-33.46 24.39-1.208 7.735.667 15.473 5.277 21.797zm14.46-18.71c.716-4.575 4.688-7.848 9.192-7.848.48 0 .965.035 1.45.113h.007a9.26 9.26 0 0 1 6.09 3.715c1.465 2.008 2.063 4.46 1.68 6.914s-1.703 4.613-3.715 6.078a9.249 9.249 0 0 1-6.934 1.68 9.246 9.246 0 0 1-6.09-3.711 9.268 9.268 0 0 1-1.68-6.942zm0 0" />
      <path d="M502.11 53.855c-8.087-11.085-19.965-18.351-33.446-20.464l-56.156-8.782c-5.438-.851-10.563 2.875-11.41 8.328-.856 5.45 2.875 10.56 8.324 11.41l56.152 8.782c8.211 1.285 15.453 5.726 20.399 12.5 4.941 6.773 6.953 15.02 5.664 23.219L459.32 295.035c-2.414 15.403-15.77 26.442-30.906 26.442-1.59 0-3.2-.122-4.82-.375l-112.203-17.57v-69.973c0-28.25-22.996-51.235-51.262-51.235h-57.863L223.48 46.906c1.286-8.21 5.735-15.453 12.524-20.398 6.777-4.934 15.02-6.938 23.226-5.64l71.72 11.273c5.44.855 10.562-2.868 11.417-8.317.856-5.449-2.867-10.562-8.316-11.418L262.34 1.133c-13.477-2.13-27 1.148-38.098 9.226-11.105 8.086-18.383 19.965-20.5 33.454l-21.695 138.515H51.262C22.996 182.324 0 205.308 0 233.558v208.68c0 28.266 22.996 51.258 51.262 51.258h208.867c28.266 0 51.262-22.992 51.262-51.258V323.754l109.125 17.086c2.656.414 5.293.613 7.898.613 24.805 0 46.688-18.09 50.645-43.324l32.316-206.184c2.113-13.476-1.176-27.004-9.266-38.09zM291.413 442.238c0 17.246-14.035 31.282-31.285 31.282H51.262c-17.25 0-31.285-14.036-31.285-31.282v-208.68c0-17.234 14.035-31.253 31.285-31.253h208.867c17.25 0 31.281 14.02 31.281 31.254v208.68zm0 0" />
      <path d="M79.242 239.715c-16.152 0-29.293 13.133-29.293 29.277 0 16.145 13.14 29.281 29.293 29.281 16.168 0 29.32-13.136 29.32-29.28 0-16.145-13.152-29.278-29.32-29.278zm0 38.578c-5.137 0-9.316-4.172-9.316-9.3 0-5.126 4.18-9.302 9.316-9.302 5.153 0 9.344 4.176 9.344 9.301 0 5.13-4.191 9.301-9.344 9.301zM156.035 304.496c-16.152 0-29.293 13.137-29.293 29.277 0 16.16 13.14 29.309 29.293 29.309s29.293-13.144 29.293-29.309c0-16.14-13.14-29.277-29.293-29.277zm0 38.61c-5.137 0-9.316-4.184-9.316-9.329 0-5.129 4.18-9.3 9.316-9.3 5.137 0 9.317 4.171 9.317 9.3 0 5.145-4.18 9.328-9.317 9.328zM232.121 240.023c-16.152 0-29.293 13.137-29.293 29.282 0 16.144 13.14 29.277 29.293 29.277 16.168 0 29.32-13.133 29.32-29.277 0-16.145-13.156-29.282-29.32-29.282zm0 38.582c-5.137 0-9.316-4.171-9.316-9.3 0-5.13 4.18-9.301 9.316-9.301 5.152 0 9.344 4.172 9.344 9.3 0 5.13-4.192 9.301-9.344 9.301zM79.242 377.21c-16.152 0-29.293 13.134-29.293 29.278s13.14 29.282 29.293 29.282c16.168 0 29.32-13.137 29.32-29.282s-13.152-29.277-29.32-29.277zm0 38.58c-5.137 0-9.316-4.173-9.316-9.302s4.18-9.3 9.316-9.3c5.153 0 9.344 4.171 9.344 9.3 0 5.13-4.191 9.301-9.344 9.301zM232.121 377.523c-16.152 0-29.293 13.133-29.293 29.278s13.14 29.281 29.293 29.281c16.168 0 29.32-13.137 29.32-29.281s-13.156-29.278-29.32-29.278zm0 38.579c-5.137 0-9.316-4.172-9.316-9.301 0-5.13 4.18-9.301 9.316-9.301 5.152 0 9.344 4.172 9.344 9.3 0 5.13-4.192 9.302-9.344 9.302zM370.344 38.242l.172.028a9.9 9.9 0 0 0 1.652.14c4.797 0 9.027-3.465 9.84-8.347.906-5.442-2.77-10.59-8.207-11.497l-.172-.027a9.981 9.981 0 0 0-11.496 8.211c-.906 5.438 2.77 10.586 8.21 11.492zm0 0" />
    </svg>
  </div>
);

export default function Budget() {
  const [funding, setFunding] = useState(0);
  const salaries = getSalaries(funding);
  return (
    <div className="bg-black text-white rounded-lg">
      <div className="flex justify-center m-3 p-5">
        <button onClick={() => setFunding(Math.floor(Math.random() * 120000))}>
          <Dice />
        </button>
        <div className="p-5">
          <div>{`$${funding} funds`}</div>
          <div>{`$${salaries} per intern`}</div>
        </div>
      </div>
    </div>
  );
}
